# -*- coding: utf-8 -*-
"""ZarinTasnimhaider_21301380_Lab1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17gTT7jY0pmPhD5HlxHxAgdqXB-H4fhSz
"""

import heapq


m= {}
n= {}
destin= 'Bucharest'
start= 'Arad'


f = open("input_file.txt","r")
for i in f:
  temp = i.split()
  source = temp[0]
  destination_info=[]
  m[source]=int(temp[1])
  if int(temp[1])==0:
    dest=temp[0]
  else:
    for j in range(2,len(temp),2):
      destination_info.append((temp[j],int(temp[j + 1])))
    n[source]= destination_info





parent= {}
visited= {}

q=[]
heapq.heappush(q, (m[start], start))
visited[start]=0
parent[start]=None



while q:
    q= sorted(q, key=lambda x: x[0])
    current=q.pop(0)
    current_cost,current_node=current


    if current_node==dest:
        path= []
        total_distance=visited[current_node]
        while current_node:
            path.append(current_node)
            current_node=parent[current_node]
        path.reverse()
        print("Path:", ' -> '.join(path))
        print(f"Total distance: {total_distance} km")
        break


    for neighbor, cost in n[current_node]:
        #print("a",neighbor,cost)
        new_cost= visited[current_node]+cost
        #print("cost",new_cost)
        if neighbor not in visited or new_cost<visited[neighbor]:
            visited[neighbor]=new_cost
            priority= new_cost+m[neighbor]
            heapq.heappush(q,(priority, neighbor))
            parent[neighbor]=current_node



else:
    print("NO PATH FOUND")



